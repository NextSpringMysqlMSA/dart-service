spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASS}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 5
      pool-name: dartServiceHikariPool
      connection-timeout: 30000
      idle-timeout: 600000
      validation-timeout: 5000
      connection-test-query: SELECT 1
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect

  # H2 데이터베이스 설정 (로컬 개발용)
#  datasource:
#    url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#    username: sa
#    password:
#    driver-class-name: org.h2.Driver
#  h2:
#    console:
#      enabled: true
#      path: /h2-console

  # dev 프로파일 Kafka 설정
  kafka:
#    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:192.168.0.224:9092}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9093}

    consumer:
      group-id: dart-api-group
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      auto-startup: true # Kafka 리스너 자동 시작 활성화
  # autoconfigure:
  #   exclude: org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration # Kafka 자동 설정 제외

  # 서버 설정
server:
  port: 8089
  servlet:
    context-path: /api/v1
  shutdown: graceful # graceful shutdown 활성화

# Eureka 설정
eureka:
  client:
    enabled: true # dev 프로파일에서 Eureka 클라이언트 비활성화

# 스프링 시큐리티 기본 비활성화
spring.security.user.name: admin
spring.security.user.password: admin

# 로깅 레벨 설정 추가
logging:
  level:
    org.apache.kafka.clients: INFO
    org.springframework.kafka: INFO
    com.example.javaversion: DEBUG
